# Step 5
# Before finding orthologies or do genome analysis, one may need to identify the 
# transposable elements and tandem repeat sequences
# This step should be done before annotating the whole genome because the repeat sequences will generate 
# many meaningless results.
# Repbase and EDTA de novo TE annotation
# RepeatMasker for masking tendom repeats.
# Installation of Repbase, download: https://www.girinst.org/server/RepBase/index.php
# Repbase itself is a database rather than a software.
 gunzip RepBase29.08.embl.tar.gz
 tar xvf RepBase29.08.embl.tar
# Installation of EDTA
conda create -n EDTA
conda activate EDTA
mamba install -c conda-forge -c bioconda edta
# usage
conda activate EDTA
perl EDTA.pl [options]
  --genome [File]		#The genome FASTA file. Required.
  --species [Rice|Maize|others]	#Specify the species for identification of TIR candidates. Default: others
  --step [all|filter|final|anno]	#Specify which steps you want to run EDTA.
				 #all: run the entire pipeline (default)
				 #filter: start from raw TEs to the end.
				 #final: start from filtered TEs to finalizing the run.
				 #anno: perform whole-genome annotation/analysis after TE library construction.
  --overwrite [0|1]		#If previous results are found, decide to overwrite (1, rerun) or not (0, default).
  --cds [File]		#Provide a FASTA file containing the coding sequence (no introns, UTRs, nor TEs) of this genome or its close relative.
  --curatedlib [file]	#Provided a curated library to keep consistant naming and classification for known TEs.
			#All TEs in this file will be trusted 100%, so please ONLY provide MANUALLY CURATED ones here.
			 #This option is not mandatory. It's totally OK if no file is provided (default).
  --sensitive [0|1]		#Use RepeatModeler to identify remaining TEs (1) or not (0, default).
			 #This step is very slow and MAY help to recover some TEs.
  --anno [0|1]	#Perform (1) or not perform (0, default) whole-genome TE annotation after TE library construction.
  --rmout [File]	#Provide your own homology-based TE annotation instead of using the EDTA library for masking.
		#File is in RepeatMasker .out format. This file will be merged with the structural-based TE annotation. (--anno 1 required).
		#Default: use the EDTA library for annotation.
  --evaluate [0|1]	#Evaluate (1) classification consistency of the TE annotation. (--anno 1 required). Default: 0.
		 #This step is slow and does not affect the annotation result.
  --exclude	[File]	#Exclude regions (bed format) from TE masking in the MAKER.masked output. Default: undef. (--anno 1 required).
  --u [float]	#Neutral mutation rate to calculate the age of intact LTR elements.
		 #Intact LTR age is found in this file: *EDTA_raw/LTR/*.pass.list. Default: 1.3e-8 (per bp per year, from rice).
  --threads|-t	[int]	#Number of theads to run this script (default: 4)
  --help|-h	#Display this help info
  
#RepeatMasker: searching repeat sequences based on Repbase(dna)/or custom library 
RepeatMasker -nolow -no_is -norna -parallel 2 -lib RepeatMasker.lib genome.fa
#-nolow:mask low complex simple repeats
#-no_is:Jump insertion check; 
#-norna:do not mask small RNA(pseudo) gene;
#-parallel

#RepeatProteinMask:searching repeat sequences based on Repbase(pep)
RepeatProteinMask -noLowSimple -pvalue 0.0001 genome.fa
# -noLowSimple: turn off low-complexity and simple repetition masking/commenting; 
# -pvalue: threshold for accepting matches
#Note: genome.fa's ID can't be longer than 18 characters.

#TRF: find repeat sequences based on the structure features by motif
trf genome.fa 2 7 7 80 10 50 2000 -d -h

# LTR-FINDER: Repeat Sequence Based Characterization
Itr_finder -W 2 -C -s tRNAs.fa genome.fa
#-w 2 Output format as table; 
# -C: detect centroids, remove high repetitive regions

#repeatmodeler: based on own sequence comparison
BuildDatabase -name mydb genome.fa
RepeatModeler -database mydb -pa 6 >run.out
#-name: the name of the database to create.
#-pa: the number of shared memory processors program, can improve the speed of analysis

